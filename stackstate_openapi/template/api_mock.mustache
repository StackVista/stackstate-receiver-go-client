// ---------------------------------------------
// ------------------ MOCKS --------------------
// ---------------------------------------------

{{#generateInterfaces}}
{{#operations}}

type {{classname}}Mock struct {
{{#operation}}	
	{{nickname}}Calls *[]{{#structPrefix}}{{&classname}}{{/structPrefix}}{{operationId}}Call
	{{nickname}}Response {{nickname}}MockResponse
{{/operation}}
}	

func New{{classname}}Mock() {{classname}}Mock {
	{{#operation}}	
	x{{nickname}}Calls := make([]{{#structPrefix}}{{&classname}}{{/structPrefix}}{{operationId}}Call, 0)
	{{/operation}}
	return {{classname}}Mock {
	{{#operation}}	
		{{nickname}}Calls: &x{{nickname}}Calls,
	{{/operation}}
	}
}

{{#operation}}
type {{nickname}}MockResponse struct {
	{{#returnType}}Result {{{.}}}{{/returnType}}
	Response *http.Response
	Error error
}

type {{#structPrefix}}{{&classname}}{{/structPrefix}}{{operationId}}Call struct {
{{#allParams}}
	P{{paramName}} {{^isPathParam}}*{{/isPathParam}}{{{dataType}}}
{{/allParams}}
}


func (mock {{{classname}}}Mock) {{{nickname}}}(ctx context.Context{{#pathParams}}, {{paramName}} {{{dataType}}}{{/pathParams}}) {{#structPrefix}}{{&classname}}{{/structPrefix}}Api{{operationId}}Request {
	return {{#structPrefix}}{{&classname}}{{/structPrefix}}Api{{operationId}}Request{
		ApiService: mock,
		ctx: ctx,
		{{#pathParams}}
		{{paramName}}: {{paramName}},
		{{/pathParams}}
	}
}

func (mock {{{classname}}}Mock) {{nickname}}Execute(r {{#structPrefix}}{{&classname}}{{/structPrefix}}Api{{operationId}}Request) ({{#returnType}}{{^isArray}}{{^returnTypeIsPrimitive}}*{{/returnTypeIsPrimitive}}{{/isArray}}{{{.}}}, {{/returnType}}*http.Response, error) {
	p := {{#structPrefix}}{{&classname}}{{/structPrefix}}{{operationId}}Call {
		{{#allParams}}
			P{{paramName}}: r.{{paramName}},
		{{/allParams}}
	}
	*mock.{{nickname}}Calls = append(*mock.{{nickname}}Calls, p)
	return {{#returnType}}{{^isArray}}{{^returnTypeIsPrimitive}}&{{/returnTypeIsPrimitive}}{{/isArray}}mock.{{nickname}}Response.Result, {{/returnType}}mock.{{nickname}}Response.Response, mock.{{nickname}}Response.Error
}

{{/operation}}
{{/operations}}
{{/generateInterfaces}}
