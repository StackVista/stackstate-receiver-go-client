/*
SUSE Observability Receiver API

This API documentation page describes the SUSE Observability receiver API.

API version: 5.2.0
Contact: info@stackstate.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package receiver_api

import (
	"encoding/json"
)

// RoleRef RoleRef contains information that points to the role being used
type RoleRef struct {
	// APIGroup is the group for the resource being referenced
	ApiGroup string `json:"apiGroup"`
	// Kind is the type of resource being referenced
	Kind string `json:"kind"`
	// Name is the name of resource being referenced
	Name string `json:"name"`
}

// NewRoleRef instantiates a new RoleRef object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoleRef(apiGroup string, kind string, name string) *RoleRef {
	this := RoleRef{}
	this.ApiGroup = apiGroup
	this.Kind = kind
	this.Name = name
	return &this
}

// NewRoleRefWithDefaults instantiates a new RoleRef object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoleRefWithDefaults() *RoleRef {
	this := RoleRef{}
	return &this
}

// GetApiGroup returns the ApiGroup field value
func (o *RoleRef) GetApiGroup() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApiGroup
}

// GetApiGroupOk returns a tuple with the ApiGroup field value
// and a boolean to check if the value has been set.
func (o *RoleRef) GetApiGroupOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApiGroup, true
}

// SetApiGroup sets field value
func (o *RoleRef) SetApiGroup(v string) {
	o.ApiGroup = v
}

// GetKind returns the Kind field value
func (o *RoleRef) GetKind() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Kind
}

// GetKindOk returns a tuple with the Kind field value
// and a boolean to check if the value has been set.
func (o *RoleRef) GetKindOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Kind, true
}

// SetKind sets field value
func (o *RoleRef) SetKind(v string) {
	o.Kind = v
}

// GetName returns the Name field value
func (o *RoleRef) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *RoleRef) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *RoleRef) SetName(v string) {
	o.Name = v
}

func (o RoleRef) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["apiGroup"] = o.ApiGroup
	}
	if true {
		toSerialize["kind"] = o.Kind
	}
	if true {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableRoleRef struct {
	value *RoleRef
	isSet bool
}

func (v NullableRoleRef) Get() *RoleRef {
	return v.value
}

func (v *NullableRoleRef) Set(val *RoleRef) {
	v.value = val
	v.isSet = true
}

func (v NullableRoleRef) IsSet() bool {
	return v.isSet
}

func (v *NullableRoleRef) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoleRef(val *RoleRef) *NullableRoleRef {
	return &NullableRoleRef{value: val, isSet: true}
}

func (v NullableRoleRef) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoleRef) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
